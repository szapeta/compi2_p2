{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/public/registro/Registro.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport \"./Registro.css\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { AuthContext } from \"../../../auth/AuthContext\";\nimport { types } from \"../../../types/Types\";\nimport ImageUploader from \"react-images-upload\";\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Registro = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const {\n    dispatch\n  } = useContext(AuthContext);\n  const [isError, setIsError] = useState(\"\");\n  const [imguser, setImguser] = useState(\"\");\n  const [formname, setFormname] = useState(\"\");\n  const [formusername, setFormusername] = useState(\"\");\n  const [formpass, setFormpass] = useState(\"\");\n  const [formpassxtwo, setFormpassxtwo] = useState(\"\");\n  const lastPath = localStorage.getItem(\"lastPath\") || \"/\";\n\n  const convertToBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n  };\n\n  const handleRegistro = async e => {\n    e.preventDefault();\n\n    if (formpass == formpassxtwo) {\n      setIsError(\"\");\n      const fotoID = uuid();\n      const fotoextension = imguser.type;\n      const ext = fotoextension.split(\"/\")[1];\n      const nombreID = fotoID + \".\" + ext;\n      const img64 = await convertToBase64(imguser);\n      console.log(types.bucketURL + nombreID);\n      await axios.post(types.apiurl + \"subirfoto\", {\n        id: nombreID,\n        \"foto\": img64.split(\",\")[1]\n      }).then(resp => {\n        axios.post(types.apiurl + \"add-user\", {\n          \"name\": formname,\n          \"user\": formusername,\n          \"password\": formpass,\n          \"path\": nombreID,\n          \"base64\": \"\"\n        }).then(respfoto => {\n          let valresp = respfoto.data;\n          console.log(valresp);\n          console.log(valresp.insertId);\n          dispatch({\n            type: types.login,\n            payload: {\n              name: formname,\n              user: formusername,\n              path: nombreID,\n              iduser: valresp.insertId\n            }\n          });\n          history.replace(lastPath);\n        });\n      });\n    }\n  };\n\n  useEffect(() => {\n    setImguser(\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/59/User-avatar.svg/240px-User-avatar.svg.png\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Registro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nombre Completo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"ingrese su nombre de usuario\",\n          autoComplete: \"off\",\n          className: \"form-control\",\n          name: \"name\",\n          id: \"name\",\n          value: formname,\n          onChange: event => {\n            setFormname(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username o email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"ingrese su nombre\",\n          autoComplete: \"off\",\n          className: \"form-control\",\n          name: \"user\",\n          id: \"user\",\n          value: formusername,\n          onChange: event => {\n            setFormusername(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"pass\",\n          value: formpass,\n          onChange: event => {\n            setFormpass(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirmar Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formpassxtwo,\n          onChange: event => {\n            setFormpassxtwo(event.target.value);\n          },\n          type: \"password\",\n          className: \"form-control\",\n          id: \"passxtwo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-pink-sherbet fondo-red-crayola\",\n        onClick: handleRegistro,\n        children: \"Registrarse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        textAlign: \"center\",\n        paddingTop: 20\n      },\n      children: isError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Registro, \"rrclgxadwlcLHIani8UVRMDxiDE=\");\n\n_c = Registro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registro\");","map":{"version":3,"sources":["/usr/src/app/src/components/public/registro/Registro.js"],"names":["axios","React","useContext","useState","useEffect","AuthContext","types","ImageUploader","v4","uuid","Registro","history","dispatch","isError","setIsError","imguser","setImguser","formname","setFormname","formusername","setFormusername","formpass","setFormpass","formpassxtwo","setFormpassxtwo","lastPath","localStorage","getItem","convertToBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","handleRegistro","e","preventDefault","fotoID","fotoextension","type","ext","split","nombreID","img64","console","log","bucketURL","post","apiurl","id","then","resp","respfoto","valresp","data","insertId","login","payload","name","user","path","iduser","replace","event","target","value","position","textAlign","paddingTop"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport \"./Registro.css\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { AuthContext } from \"../../../auth/AuthContext\";\nimport { types } from \"../../../types/Types\";\nimport ImageUploader from \"react-images-upload\";\nimport { v4 as uuid } from 'uuid';\n\nexport const Registro = ({history}) => {\n    const { dispatch } = useContext(AuthContext);\n\n    const [isError, setIsError] = useState(\"\");\n    const [imguser, setImguser] = useState(\"\");\n    const [formname, setFormname] = useState(\"\");\n    const [formusername, setFormusername] = useState(\"\");\n    const [formpass, setFormpass] = useState(\"\");\n    const [formpassxtwo, setFormpassxtwo] = useState(\"\");\n\n    const lastPath = localStorage.getItem(\"lastPath\") || \"/\";\n\n    const convertToBase64 = (file) => {\n        return new Promise((resolve, reject) => {\n          const fileReader = new FileReader();\n          fileReader.readAsDataURL(file);\n          fileReader.onload = () => {\n            resolve(fileReader.result);\n          };\n          fileReader.onerror = (error) => {\n            reject(error);\n          };\n        });\n      };\n\n    const handleRegistro = async (e) => {\n        e.preventDefault();\n        if (formpass == formpassxtwo) {\n            setIsError(\"\");\n\n            const fotoID = uuid();\n            const fotoextension =  imguser.type;\n            const ext = fotoextension.split(\"/\")[1]\n            const nombreID = fotoID+\".\"+ext\n            const img64 = await convertToBase64(imguser);\n            \n            console.log(types.bucketURL + nombreID);\n\n            await axios.post(types.apiurl+\"subirfoto\",{\n                id:nombreID,\n                \"foto\":img64.split(\",\")[1]\n            }).then(resp=>{\n                axios.post(types.apiurl + \"add-user\",{\n                    \"name\":formname,\n                    \"user\":formusername,\n                    \"password\":formpass,\n                    \"path\":nombreID,\n                    \"base64\":\"\"\n                }).then(respfoto =>{\n                    let valresp = respfoto.data\n                    console.log(valresp)\n                    console.log(valresp.insertId)\n                    dispatch({\n                        type: types.login,\n                        payload: {\n                            name: formname,\n                            user: formusername,\n                            path: nombreID,\n                            iduser: valresp.insertId\n                        },\n                    });\n        \n                    history.replace(lastPath);\n                })\n            })\n        }\n    };\n\n    useEffect(() => {\n        setImguser(\n            \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/59/User-avatar.svg/240px-User-avatar.svg.png\"\n        );\n    }, []);\n\n    return (\n        <div className=\"container mt-5\">\n            <h1>Registro</h1>\n            <hr />\n            <form autoComplete=\"off\">\n               \n                        <div className=\"form-group\">\n                            <label>Nombre Completo</label>\n                            <input\n                                type=\"ingrese su nombre de usuario\"\n                                autoComplete=\"off\"\n                                className=\"form-control\"\n                                name=\"name\"\n                                id=\"name\"\n                                value={formname}\n                                onChange={(event) => {\n                                    setFormname(event.target.value);\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Username o email</label>\n                            <input\n                                type=\"ingrese su nombre\"\n                                autoComplete=\"off\"\n                                className=\"form-control\"\n                                name=\"user\"\n                                id=\"user\"\n                                value={formusername}\n                                onChange={(event) => {\n                                    setFormusername(event.target.value);\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                id=\"pass\"\n                                value={formpass}\n                                onChange={(event) => {\n                                    setFormpass(event.target.value);\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Confirmar Password</label>\n                            <input\n                                value={formpassxtwo}\n                                onChange={(event) => {\n                                    setFormpassxtwo(event.target.value);\n                                }}\n                                type=\"password\"\n                                className=\"form-control\"\n                                id=\"passxtwo\"\n                            />\n                        </div>\n                        <button\n                            className=\"btn btn-pink-sherbet fondo-red-crayola\"\n                            onClick={handleRegistro}\n                        >\n                            Registrarse\n                        </button>\n\n            </form>\n\n            <div\n                style={{\n                    position: \"absolute\",\n                    textAlign: \"center\",\n                    paddingTop: 20,\n                }}\n            >\n                {isError}\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}